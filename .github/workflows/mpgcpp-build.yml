name: C/C++ CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Setup Python
      uses: actions/setup-python@v3.1.3
      with:
        # Version range or exact version of a Python version to use, using SemVer's version range syntax.
        python-version: "3.10"
        # Used to specify a package manager for caching in the default directory. Supported values: pip, pipenv, poetry.
        cache: pip
        # The target architecture (x86, x64) of the Python interpreter.
        architecture: x64
        # Used to pull python distributions from actions/python-versions. Since there's a default, this is typically not supplied by the user.
#        token: # optional, default is ${{ github.token }}
        # Used to specify the path to dependency files. Supports wildcards or a list of file names for caching multiple dependencies.
#        cache-dependency-path: # optional
    - name: Install GCC
      # You may pin to the exact commit or the version.
      # uses: egor-tensin/setup-gcc@eaa888eb19115a521fa72b65cd94fe1f25bbcaac
      uses: egor-tensin/setup-gcc@v1
      with:
        # GCC version to install
        version: latest
        # Target platform
        platform: x64
    - name: Download and install Boost
      # You may pin to the exact commit or the version.
      # uses: MarkusJx/install-boost@3039450bb3dd2e8630d1cf10ec39cb1da3054bbd
      uses: MarkusJx/install-boost@v2.4.4
      with:
        # The boost version to install, e.g. "1.73.0"
        boost_version: "1.81"
        # The toolset used to compile boost, e.g. "msvc"
        toolset: gcc
        # The platform version boost was compiled on, e.g. "18.04"
#        platform_version: # optional, default is 
        # Whether the boost libraries are linked statically or dynamically
#        link: # optional, default is 
        # The architecture the binaries were built for
        arch: x64
        # The dirctory to install boost into
#        boost_install_dir: # optional, default is 
        # Wheter to use actions/cache to improve build times
        cache: true
    - name: Create Build directory
      run: mkdir build
    - name: CMake Action
      # You may pin to the exact commit or the version.
      # uses: threeal/cmake-action@5be43ab87eca44c04ccf84cacaa967009ec77d12
      uses: threeal/cmake-action@v1.1.0
      with:
        # Source directory of the CMake project
        source-dir: mpgcpp
        # Build directory of the CMake project
        build-dir: build
        # List of build targets
#        targets: ${{target}}
        # If enabled, run testing using CTest (true/false)
        run-test: true
        # Build system generator of the CMake project
        generator: make
        # Preferred executable for compiling C language files
        c-compiler: gcc
        # Preferred executable for compiling C++ language files
        cxx-compiler: g++
        # Additional flags passed when compiling C language files
#        c-flags: # optional
        # Additional flags passed when compiling C++ language files
#        cxx-flags: # optional
        # Additional arguments passed during the CMake configuration
        args: ""
        # Additional arguments passed during the CTest run
#        test-args: # optional
    
