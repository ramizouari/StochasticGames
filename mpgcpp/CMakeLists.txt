cmake_minimum_required(VERSION 3.24)
project(mpgcpp)

set(CMAKE_CXX_STANDARD 20)
set(HEADER_FILES game/MeanPayoffGame.h csp/Variable.h csp/MaxAtomSystem.h csp/MinMaxSystem.h IntRange.h mpgio/MPGReader.h Writer.h ProgramOptions.h)
set(SOURCE_FILES csp/Variable.cpp Writer.cpp ProgramOptions.cpp)
include_directories(.)
include_directories(CPLibrary/include)
add_library(CPLibrary STATIC IMPORTED)
find_package(Boost COMPONENTS iostreams program_options log python REQUIRED)
add_executable(MPGSolver MPGSolver.cpp ${HEADER_FILES} ${SOURCE_FILES})
add_executable(MPGGenerator MPGGenerator.cpp ${HEADER_FILES} ${SOURCE_FILES})

target_link_libraries(MPGSolver Boost::iostreams Boost::program_options Boost::log pthread)
target_link_libraries(MPGGenerator Boost::iostreams Boost::program_options Boost::log pthread)

add_library(mpgcpp SHARED PyMPGWrapper.cpp ${HEADER_FILES} ${SOURCE_FILES})
target_link_libraries(mpgcpp Boost::iostreams Boost::program_options Boost::log pthread Boost::python)
execute_process(COMMAND python3-config --includes OUTPUT_VARIABLE PYTHON_INCLUDE)
string(REPLACE "-I" "" PYTHON_INCLUDE ${PYTHON_INCLUDE})
separate_arguments(PYTHON_INCLUDE)
include_directories(${PYTHON_INCLUDE})
message(STATUS "Python include: ${PYTHON_INCLUDE}")